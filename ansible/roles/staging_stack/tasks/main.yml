# roles/staging_stack/tasks/main.yml

- name: Ensure base dir and config rendered
  become: true
  block:
    - name: Ensure /opt/meteo exists
      file:
        path: /opt/meteo
        state: directory
        mode: '0755'

    - name: Render .env.staging
      template:
        src: ".env.staging.j2"
        dest: "/opt/meteo/.env.staging"
        mode: '0600'
        owner: root
        group: root

    # Compose lÃ¤dt automatisch .env im Projektverzeichnis.
    # Wir verlinken .env.staging -> .env, damit kein --env-file gebraucht wird.
    - name: Link .env.staging to .env for compose auto-load
      file:
        src: /opt/meteo/.env.staging
        dest: /opt/meteo/.env
        state: link
        force: true

    - name: Render docker-compose.staging.yml
      template:
        src: "docker-compose.staging.yml.j2"
        dest: "/opt/meteo/docker-compose.staging.yml"
        mode: '0644'

# --- Docker Engine & Compose v2 installieren und starten ---

- name: Install Docker engine, compose plugin and python docker SDK (Ubuntu)
  become: true
  apt:
    name:
      - docker.io
      - docker-compose-plugin
      - python3-docker
    state: present
    update_cache: yes

- name: Ensure docker service is running
  become: true
  service:
    name: docker
    state: started
    enabled: true

- name: Wait for docker socket to appear
  become: true
  wait_for:
    path: /var/run/docker.sock
    state: present
    timeout: 60

# Optional: Benutzer in die docker-Gruppe (wir nutzen trotzdem become)
- name: Add current SSH user to docker group
  become: true
  user:
    name: "{{ ansible_user | default('azureuser') }}"
    groups: docker
    append: true

# --- Registry-Login (nur wenn Secrets gesetzt) ---

- name: Login to GHCR (private images)
  become: true
  community.docker.docker_login:
    registry_url: ghcr.io
    username: "{{ ghcr_user }}"
    password: "{{ ghcr_pat }}"
  when:
    - (ghcr_user | default('')) | length > 0
    - (ghcr_pat  | default('')) | length > 0

# --- Stack starten / aktualisieren ---

- name: Pull images & start stack (compose v2)
  become: true
  community.docker.docker_compose_v2:
    project_src: /opt/meteo
    files:
      - docker-compose.staging.yml
    state: present
    pull: always
    recreate: smart
    remove_orphans: true
