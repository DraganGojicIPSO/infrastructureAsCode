# roles/staging_stack/tasks/main.yml

- name: Ensure base dir and render configs
  become: true
  block:
    - name: Ensure /opt/meteo exists
      file:
        path: /opt/meteo
        state: directory
        mode: '0755'

    - name: Render .env.staging
      template:
        src: ".env.staging.j2"
        dest: "/opt/meteo/.env.staging"
        mode: '0600'
        owner: root
        group: root

    # Compose lädt automatisch .env – verlinken auf .env.staging
    - name: Link .env.staging -> .env for compose auto-load
      file:
        src: /opt/meteo/.env.staging
        dest: /opt/meteo/.env
        state: link
        force: true

    - name: Render docker-compose.staging.yml
      template:
        src: "docker-compose.staging.yml.j2"
        dest: "/opt/meteo/docker-compose.staging.yml"
        mode: '0644'

# --- Docker aus dem offiziellen Docker-Repo installieren ---

- name: Install apt prerequisites for Docker repo
  become: true
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

- name: Add Docker GPG key
  become: true
  shell: |
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    chmod a+r /etc/apt/keyrings/docker.asc
  args:
    creates: /etc/apt/keyrings/docker.asc

- name: Add Docker apt repository
  become: true
  copy:
    dest: /etc/apt/sources.list.d/docker.list
    mode: '0644'
    content: |
      deb [arch={{ (ansible_architecture == 'x86_64') | ternary('amd64', ansible_architecture) }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename | default('jammy') }} stable

- name: Update apt cache (docker repo)
  become: true
  apt:
    update_cache: yes

- name: Install Docker CE and plugins
  become: true
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Ensure docker service is running
  become: true
  service:
    name: docker
    state: started
    enabled: true

- name: Wait for docker socket
  become: true
  wait_for:
    path: /var/run/docker.sock
    state: present
    timeout: 60

# optional: Nutzer der SSH-Session in docker-Gruppe (Tasks laufen dennoch mit become)
- name: Add SSH user to docker group
  become: true
  user:
    name: "{{ ansible_user | default('azureuser') }}"
    groups: docker
    append: true

# --- GHCR Login (CLI, robust) ---

- name: Docker login to GHCR (private images)
  become: true
  shell: |
    echo "{{ ghcr_pat }}" | docker login ghcr.io -u "{{ ghcr_user }}" --password-stdin
  when:
    - (ghcr_user | default('')) | length > 0
    - (ghcr_pat  | default('')) | length > 0

# --- Stack deployen ---

- name: Pull images & start stack (compose v2)
  become: true
  community.docker.docker_compose_v2:
    project_src: /opt/meteo
    files:
      - docker-compose.staging.yml
    state: present
    pull: always          # ok (alternativ: missing/never)
    recreate: auto        # gültige Werte: always | never | auto
    remove_orphans: true

# optional: prüfen, dass compose verfügbar ist
- name: Check docker compose version
  become: true
  shell: docker compose version
  register: compose_ver
  changed_when: false
